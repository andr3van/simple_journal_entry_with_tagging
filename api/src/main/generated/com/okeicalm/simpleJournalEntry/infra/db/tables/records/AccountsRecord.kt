/*
 * This file is generated by jOOQ.
 */
package com.okeicalm.simpleJournalEntry.infra.db.tables.records


import com.okeicalm.simpleJournalEntry.infra.db.enums.AccountsElementType
import com.okeicalm.simpleJournalEntry.infra.db.tables.Accounts

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class AccountsRecord() : UpdatableRecordImpl<AccountsRecord>(Accounts.ACCOUNTS) {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var code: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var name: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var elementType: AccountsElementType?
        set(value): Unit = set(3, value)
        get(): AccountsElementType? = get(3) as AccountsElementType?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised AccountsRecord
     */
    constructor(id: Long? = null, code: String? = null, name: String? = null, elementType: AccountsElementType? = null): this() {
        this.id = id
        this.code = code
        this.name = name
        this.elementType = elementType
        resetChangedOnNotNull()
    }
}
